<!DOCTYPE html>
<html lang="en">
  <head>
  
   <% include partials/head.ejs %>

	<style>
		.vertical-center {
		text-align: center;
		}
		.btn-xl {
			padding: 18px 28px;
			font-size: 22px;
			border-radius: 8px;
		}
		.listNoBullet {
			list-style-type: none;
		}

		.backContainer{
		
			background: #ffffff url('../images/BackgroundBanners.png') no-repeat center center fixed;
			-webkit-background-size: cover;
			-moz-background-size: cover;
			-o-background-size: cover;
			background-size: cover;
			
		}
	</style>

  </head>
  <body style="padding-top: 70px;" class="backContainer"> <!-- Put in CSS !-->
  
	<div class="container float-top">
	<nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
		
		<div class="navbar-header navbar-brand">
			Towers 
		</div>
		
		<ul class="nav navbar-nav">
			<li class="active"><a href="Graph.html">Graphs</a></li>
			<li><a href="Table.html">Tables</a></li>
		</ul>
		
		<p class="navbar-text">Current Key: <%= currentKey %> </p> 
		<p class="navbar-text" id="currKey"> </p> 
		<p class="navbar-text">Player: </p> 
		<p class="navbar-text" id="currPlayer"></p> 

		<div class="col-sm-3 col-md-3 pull-right">
        <form class="navbar-form" id="myKey" role="search" action="/setKey" method="post">
        <!--<form class="navbar-form" id="myKey" action="/key">!-->
		<label for="usr">
				<span style="color: white;">
					<h4> Key:  </h4>
				</span>
		</label>
        <div class="input-group">
            <!--<form action="/add" method="post"> !-->
			<input type="text" name="newItem" id="keyTextField" placeholder="Enter key">
			<input type="submit">
        </div>
        </form>
        </div>
		
	</nav>
	</div>

	
	<div class="container">
		<div class="jumbotron vertical-center">
			<!-- Insert drop down list !-->
			<h1>Graph</h1> 
			<div class="row">
				<div class="col-xs-6 col-xs-offset-3">
					<!--
					<div class="form-group">
					<select class="selectpicker form-control" id="myKeySelector">
						<optgroup label="Personal history">
						<option>Me</option> 
						</optgroup>
						<optgroup label="Leaderboard">
						<option>Players</option> 
						</optgroup>
						<optgroup label="Towers">
						<option>Towers</option> 
						</optgroup>
						<optgroup label="Hall of fame">
						<option>First tower in country</option> 
						</optgroup>
						<optgroup label="Other">
						<option>Date and time for new moons</option> 
						</optgroup>
					</select>
					</div>
					!-->
				</div>
			</div>
		<!--</form>!-->
        </div>
		</div>
		<div class="container">
			<div class="row">
				<!--<div class="col-sm-2">
				<a href="#" class="">
					<div class="jumbotron">
						
							<span style="font-size:3em;" class="glyphicon glyphicon-menu-left"></span> 
						
					</div>
					</a>
				</div>!-->
				<div class="col-sm-12">
					<div class="jumbotron">
					<!-- <canvas id="canvas" width="300" height="300">
					</canvas> !-->

					<div class="row">
						<div class="col-sm-6">
							<form id="groupByFormID">
							<label>Group by: </label>
							<label class="radio-inline"><input type="radio" name="groupByRadio" id="overallRadioID" checked="checked" value="1">Overall</label>
							<label class="radio-inline"><input type="radio" name="groupByRadio" id="towerRadioID" value="2">Most popular tower</label>
							<label class="radio-inline"><input type="radio" name="groupByRadio" id="locationRadioID" value="3">Most popular location</label>
							<label class="radio-inline"><input type="radio" name="groupByRadio" id="dateRadioID" value="4">Most popular date</label>
							<label class="radio-inline"><input type="radio" name="groupByRadio" id="monthRadioID" value="5">Most popular month</label>
							<label class="radio-inline"><input type="radio" name="groupByRadio" id="hourRadioID" value="6">Most popular hour</label>
							</form>
						</div>
						<div class="col-sm-2 pull-right">
							<div class="form-group">
								<label>Number of selections</label>
									<select class="selectpicker form-control" id="mySelectionRange"> 
										<option>1</option>
										<option>2</option>
										<option>3</option>
										<option>4</option>
										<option>5</option>
										<option>6</option>
										<option>7</option>
									</select>
							</div>
						</div>
					</div>
					<div class="row">
						<div class="col-sm-6">
						<div class="form-group">
							<label>Value</label>							
							<select class="selectpicker form-control" id="myPresetSelector">
								<optgroup label="Personal history">
									<option value='0'>Number of claimed Towers</option>
									<option value='9'>Number of claims on other players' Towers</option>
									<option value='1'>Number of built Towers</option>	
									<option value='2'>Amount of geld collected</option>
									<option value='3'>Amount of bonus collected</option>	
								</optgroup>
								<optgroup label="All Players">
									<option value='4'>Number of built Towers</option> 
								</optgroup>
								<optgroup label="Leaderboard">
									<option value='5'>Most claims</option>  
									<option value='6'>Most built towers</option>  
									<option value='7'>Most geld collected</option> 
									<option value='8'>Highest geld bonus</option> 
								</optgroup>
			
							</select>
					
							<!--
						<select class="selectpicker form-control" id="myPresetSelector">
							<option>Number of claimed Towers</option>
							<option>Number of built Towers</option>	
							<option>Amount of geld collected</option>						
						</select>
						!-->
						</div>
						</div>
						<div class="col-sm-2">
						</div>
						<div class="col-sm-4">
						<div class="form-group">
							<label>Timeframe</label>
						<select class="selectpicker form-control" id="myTimeframeSelector">
							<option>All time</option>
							<option>Per New Moon</option>
							<option>Per day</option>	
							<option>Per day in month</option>	
							<option>Per hour in week</option>	
						</select>
						</div>
						</div>
					</div>
					<div class="row">
						<div class="col-sm-3">
							<div class="form-group">
								<label>From</label>
									<select class="selectpicker form-control" id="myFromMoonSelector"> </select>
							</div>
						</div>
						<div class="col-sm-3">
							<div class="form-group">
								<label>To</label>
									<select class="selectpicker form-control" id="myToMoonSelector"> </select>
							</div>
						</div>
						<div class="col-sm-3 pull-right">
							<div class="form-group">
								<label>Chart Type</label>
									<select class="selectpicker form-control" id="myChartType"> 
										<option>Line</option>
										<option>Bar</option>
										<option>Pie</option>
									</select>
							</div>
						</div>
					</div>
					<div class="row">
						<div class="col-sm-3">
							<div class="form-group">
								<button type="button" id="generateBtn" class="btn btn-primary btn-lg">Generate</button>
							</div>
						</div>
					</div>
					
					<div class="row">
						<canvas id="myChart" width="300" height="200"></canvas>
					<!--<ul class="listNoBullet" id="myKeyList">	</ul> !-->
					</div>

					</div>
				</div>
				<!--<div class="col-sm-2">
				<a href="#" class="">
					<div class="jumbotron">
					
							<span style="font-size:3em;" class="glyphicon glyphicon-menu-right"></span> 
						
					</div>
				</a>
				</div>!-->
			</div>
		</div>
	</div>

    <% include partials/scripts.ejs %>

    <script type="text/javascript">
    function refreshMoonData(){
    	$.ajax({
            type: 'post',
            url: '/newMoons',
            data: {},
            success: function (data) {
          		var parsedData = JSON.parse(data);
          		var parsedMoonData = JSON.parse(parsedData['moonData']);

          		var todayDate = new Date().toJSON().slice(0,10).replace(/\-/g, '/');
            	
          		$("#currPlayer").empty();
    			$("#currPlayer").append(parsedData['playerAlias']);

            	$("#myFromMoonSelector").empty();
            	for (var outKey in parsedMoonData) {
   					var outObject = parsedMoonData[outKey];
    					var newMoonDate = outObject['iso8601'].substring(0, 10).replace(/\-/g, '/');
    					if(todayDate > newMoonDate){
        				$("#myFromMoonSelector").append("<option>" + newMoonDate
              			+ "</option>");
              			$("#myToMoonSelector").append("<option>" + newMoonDate
              			+ "</option>");
        			}
  				}
  				$("#myFromMoonSelector").append("<option>" + todayDate
              			+ "</option>");
              	$("#myToMoonSelector").append("<option>" + todayDate
              			+ "</option>");

 				$("#myToMoonSelector").find("option").eq(0).remove();
            	ev.preventDefault();
            }
        });
    };

    jQuery(window).load(function (ev) {
    	refreshMoonData();
	});

	var toSelector = $('#myFromMoonSelector');
	toSelector.on('change', function(){
		var selectedDate = $('#myFromMoonSelector option:selected').val();

		$("#myToMoonSelector").empty();
		$("#myFromMoonSelector > option").each(function() {
    		if(this.text > selectedDate){
    			$("#myToMoonSelector").append("<option>" + this.text
              			+ "</option>");
    		}
		});
        
 				
    	ev.preventDefault();

	});

	$('#groupByFormID').on("change", 'input:radio[name=groupByRadio]:checked', function(ev) {
    		//alert(String(ev.target.id));
    		//alert($(this).attr('id'));
    		//alert("hello");
    		if(String(ev.target.id) === 'overallRadioID'){
    			
        	}
        	else if(String(ev.target.id) === 'towerRadioID'){
    			
        	}
        	else if(String(ev.target.id) === 'locationRadioID'){
    			
        	}
	});

    </script>

    <script type="text/javascript">
    var myChart = null;
    var form = $('#myKey');
    form.submit(function (ev) {
    	ev.preventDefault();
    	$("#currKey").empty();
    	$("#currKey").append($('#keyTextField').val());

        $.ajax({
            type: form.attr('method'),
            url: form.attr('action'),
            data: {
            		myApiKey: $('#keyTextField').val()
            	},
            success: function (data) {
          		
          		if(data != null){
          			var parsedData = JSON.parse(data);
          			//alert(parsedData["playerId"]);
          			if(parsedData["playerId"]){
          				refreshMoonData();
          			}
          		}
          		/*if(data.length > 0){
            		var parsedData = JSON.parse(data);
          			var todayDate = new Date().toJSON().slice(0,10).replace(/\-/g, '/');
          			//alert(todayDate);
            	
            		$("#myFromMoonSelector").empty();
            		for (var outKey in parsedData) {
   						var outObject = parsedData[outKey];
    						var newMoonDate = outObject['iso8601'].substring(0, 10).replace(/\-/g, '/');
    						if(todayDate > newMoonDate){
        					$("#myFromMoonSelector").append("<option>" + newMoonDate
              				+ "</option>");
              				$("#myToMoonSelector").append("<option>" + newMoonDate
              				+ "</option>");
        				}
  					}
 					$("#myToMoonSelector").find("option").eq(0).remove();
            		ev.preventDefault();
            	}*/
            }
        });

       // ev.preventDefault();
    });

	var generateBtn = $('#generateBtn');

	generateBtn.click(function (ev) {
		ev.preventDefault();

		$.ajax({
            type: 'post',
            url: '/graphKey',
            data: {myFromDate: $('#myFromMoonSelector option:selected').val(),
            	myToDate: $('#myToMoonSelector option:selected').val(),
            	//myApiKey: $('#keyTextField').val(), 
            	myGroupByRadio: $('input[name=groupByRadio]:checked', '#groupByFormID').val(),
            	myPresetSelector: $('#myPresetSelector option:selected').val(),
            	mySelectionRange: $('#mySelectionRange option:selected').val(),
            	myTimeframeSelector: $('#myTimeframeSelector').prop("selectedIndex")
            	/*myKeySelector: $('#myKeySelector option:selected').index('option')*/},
            success: function (data) {
          
            	var parsedData = JSON.parse(data);
            	
            	if(data.length > 0){

          			var timeAxisArray = [];
          			//var valueAxisArray = []; 
          
              		for (var timeKey in parsedData['timeAxle']){
              			//alert(parsedData['timeAxle'][timeKey]);
              			timeAxisArray.push(parsedData['timeAxle'][timeKey]);
              		}
              		/*
              		for (var valueKey in parsedData['valueAxle']){
              			//alert(parsedData['timeAxle'][timeKey]);
              			valueAxisArray.push(parsedData['valueAxle'][valueKey]);
              		}
              		*/

         			var ctx = document.getElementById('myChart').getContext('2d');
         			if(myChart != null){
      					myChart.destroy();	
      				}
      				
      				
      					var newDatasets = [];
      					//var newColours = [];
      					var newBackColour = ["rgba(0,0,0,0)"];
      					//alert(JSON.stringify(parsedData));
      					if(($('#myChartType').val().toLowerCase() === 'pie') && (($('#myPresetSelector option:selected').index('option') > 4) || ($('input[name=groupByRadio]:checked', '#groupByFormID').val() > 3))){
      						var pieDataSet = [];
      						var pieColours = [];
      						timeAxisArray = [];
      						
      						for (var i = 0; i < parsedData['valueAxle'].length; i++) {
      							pieDataSet.push(parsedData['valueAxle'][i][1]);
      							timeAxisArray.push(parsedData['valueAxle'][i][0]);
      							//alert(parsedData['valueAxle'][i][0]);
      							if(parsedData['valueAxle'][i][0] === $("#currPlayer").html()){
      								pieColours.push("rgba(10, 10, 10 ,1)");
      							}
      							else{
      								pieColours.push("rgba(" + Math.floor(Math.random() * 255) + "," + 
      										Math.floor(Math.random() * 255) + "," + Math.floor(Math.random() * 255) + ",1)");
      							}

      							
      						}
      						newDatasets[0] = {
      									data: pieDataSet,
      									backgroundColor: pieColours
    						};
      					}
      					else{
      						for (var i = 0; i < parsedData['valueAxle'].length; i++) {
      						
      							if($('#myChartType').val().toLowerCase() === 'bar' || $('#myChartType').val().toLowerCase() === 'pie'){
      								var tempColour = "rgba(" + Math.floor(Math.random() * 255) + "," + 
      										Math.floor(Math.random() * 255) + "," + Math.floor(Math.random() * 255) + ",1)";
      								newBackColour = [];

									for (var k = 0; k < (parsedData['valueAxle'][i][1].length); k++) {
										if($('#myChartType').val().toLowerCase() === 'pie'){
											if(parsedData['valueAxle'][i][0] === $("#currPlayer").html()){
      											newBackColour.push("rgba(10, 10, 10 ,1)");
      										}
      										else{
												newBackColour.push("rgba(" + Math.floor(Math.random() * 255) + "," + Math.floor(Math.random() * 255) + "," + Math.floor(Math.random() * 255) + ",1)");
											}
										}
										else{
											if(parsedData['valueAxle'][i][0] === $("#currPlayer").html()){
      											newBackColour.push("rgba(10, 10, 10 ,1)");
      										}
      										else{
												newBackColour.push(tempColour);
											}
										}
      									
      								}
      							}
      							newDatasets[i] = {
      									label: parsedData['valueAxle'][i][0],
      									data: parsedData['valueAxle'][i][1],
      									borderColor: "rgba(" + Math.floor(Math.random() * 255) + "," + 
      										Math.floor(Math.random() * 255) + "," + Math.floor(Math.random() * 255) + ",1)",
      									backgroundColor: newBackColour
    							};
      						};	
      					}				
				
      					myChart = new Chart(ctx, {
  							type: $('#myChartType').val().toLowerCase(),
  							data: {
    							labels: timeAxisArray,
    							datasets: newDatasets
  							}
						});										
        		}           	
            	console.log("Success!");
            }
        });
	});
	</script>

	<script type="text/javascript">
	/*
	var chartSelector = $('#myChartType');
	chartSelector.on('change', function(e){
		e.preventDefault();
		alert("test");
		var selectedType = $('#myChartType option:selected').index('option');

		myChart.type = 'bar';
		myChart.update();
	});
	*/
	</script>

	<script type="text/javascript">
	/*
	var selector = $('#myKeySelector');
	selector.on('change', function(){
		var selected = $('#myKeySelector option:selected').index('option');
		//alert(selected);

		$("#myPresetSelector").empty();
		switch(selected){
			case 0:
				$("#myPresetSelector").append("<option>Number of claimed Towers</option>");
				$("#myPresetSelector").append("<option>Number of built Towers</option>");
				$("#myPresetSelector").append("<option>Amount of geld collected</option>");
			break;
			case 1:
				
			break;
			case 2:
				$("#myPresetSelector").append("<option>Average number of claimed Towers</option>");
				$("#myPresetSelector").append("<option>Average amount of collected geld</option>");
				$("#myPresetSelector").append("<option>Contested areas</option>");
			break;
			case 3:
				$("#myPresetSelector").append("<option>Average number of claimed Towers</option>");
				$("#myPresetSelector").append("<option>Average amount of collected geld</option>");
				$("#myPresetSelector").append("<option>Contested areas</option>");
			break;
			case 4:
				$("#myPresetSelector").append("<option>Average number of claimed Towers</option>");
				$("#myPresetSelector").append("<option>Average amount of collected geld</option>");
				$("#myPresetSelector").append("<option>Contested areas</option>");
			break;
			case 5:
				
			break;
			case 6:
				$("#myPresetSelector").append("<option>Towers built</option>");
			break;
			case 7:
				$("#myPresetSelector").append("<option>Towers built</option>");
			break;
			case 8:
				
			break;
		
		}
		//alert($("#currKey").text());
		
		 $.ajax({
            type: $('#myKey').attr('method'),
            url: $('#myKey').attr('action'),
            data: {myKeySelector: $('#myKeySelector option:selected').index('option')},
            success: function (data) {
          
            	var parsedData = JSON.parse(data);
            	if(data.length > 0){
          			//stat = obj;
          			$("#myKeyList").empty();
          			for (var key in parsedData[0]){
              			var attrName = key;
              			var attrValue = parsedData[0][key];

              			$("#myKeyList").append("<li> <p>" + attrName + " : " + attrValue + "</p> </li>");
              			//console.log(attrName + ' : ' + attrValue);
         			}
        		}      	
            }
        });
		
	});
	*/
	</script>
  </body>
</html>